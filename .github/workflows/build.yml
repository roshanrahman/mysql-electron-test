name: Build/release

on: push

jobs:
  once:
      name: Create GitHub release
      runs-on: ubuntu-latest
      outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
      steps:
        - name: Create a release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: true
            prerelease: true
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - run: npm install 
      - name: Electron Build
        uses: knicknic/os-specific-run@v1.0.3
        with:
          macos: npm run electron-pack
          linux: npm run electron-pack -c.snap.publish=github
          windows: npm run electron-pack
        env:
            # GitHub token, automatically provided to the action
            # (No need to define this secret in the repo settings)
            GITHUB_TOKEN: ${{ secrets.github_token }}
            GH_TOKEN: ${{ secrets.github_token }}

            # If the commit is tagged with a version (e.g. "v1.0.0"),
            # release the app after building
            RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Zipping files
        uses: papeloto/action-zip@v1
        with:
          files: dist/
          dest: zipped.zip
      - name: Releasing 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: zipped.zip
          asset_name: build-${{ matrix.os }}
          asset_content_type: application/octet-stream
        env:
            # GitHub token, automatically provided to the action
            # (No need to define this secret in the repo settings)
            GITHUB_TOKEN: ${{ secrets.github_token }}
            GH_TOKEN: ${{ secrets.github_token }}

            # If the commit is tagged with a version (e.g. "v1.0.0"),
            # release the app after building
            RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}